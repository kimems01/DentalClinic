@model HMS.Models.PatientTestViewModel.ManagePatientTestViewModel

@{ ViewData["Title"] = "Create"; }

<div>
    <div class="row">
        <div class="col-md-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div hidden>
                <input asp-for="PatientTestCRUDViewModel.Id" id="Id" />
                <input asp-for="PatientTestCRUDViewModel.CreatedDate" id="CreatedDate" />
                <input asp-for="PatientTestCRUDViewModel.CreatedBy" id="CreatedBy" />
            </div>
            <div class="row">
                <div class="col-6 col-sm-6">
                    <div class="form-group row">
                        <label asp-for="PatientTestCRUDViewModel.PatientId" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <select asp-for="PatientTestCRUDViewModel.PatientId" asp-items="@ViewBag._LoadddlPatientName" id="PatientId" class="form-control" style="width:100%;">
                                <option disabled selected>--- SELECT ---</option>
                            </select>
                            <span asp-validation-for="PatientTestCRUDViewModel.PatientId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label asp-for="PatientTestCRUDViewModel.PaymentStatus" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <select asp-for="PatientTestCRUDViewModel.PaymentStatus" id="PaymentStatus" class="form-control">
                                <option disabled selected>--- SELECT ---</option>
                                <option value="Paid">Paid</option>
                                <option value="Unpaid">Unpaid</option>
                            </select>
                            <span asp-validation-for="PatientTestCRUDViewModel.PaymentStatus" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="col-6 col-sm-6">
                    <div class="form-group row">
                        <label asp-for="PatientTestCRUDViewModel.TestDate" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <input asp-for="PatientTestCRUDViewModel.TestDate" class="form-control" type="date" />
                            <span asp-validation-for="PatientTestCRUDViewModel.TestDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label asp-for="PatientTestCRUDViewModel.DeliveryDate" class="col-sm-3 col-form-label"></label>
                        <div class="col-sm-9">
                            <input asp-for="PatientTestCRUDViewModel.DeliveryDate" class="form-control" type="date" />
                            <span asp-validation-for="PatientTestCRUDViewModel.DeliveryDate" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <hr />
            <partial name="_AddLabTests" />
            <hr />
            <div class="form-group row">
                <label class="col-sm-9 col-form-label"></label>
                <div class="col-sm-3 text-lg-right">
                    <input type="button" value="Save" class="btn btn-info" id="btnAddPatientTest">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

<script>
    $(document).ready(function () {
        $("#PatientId").select2();
        $("#ConsultantId").select2();
    });


    $("body").on("click", "#btnAddPatientTest", function () {

        if (!FieldValidation('#PatientId')) {
            FieldValidationAlert('#PatientId', 'Patient Name is Required.', "warning");
            return;
        }

        if (listPatientTestDetail.length == 0) {
            FieldValidationAlert('#LabTestsId', 'Please add at least one lab test item.', "warning");
            return;
        }

        var _PreparedFormObj = PreparedFormObj();
        if (parseFloat($("#Id").val()) > 0) {
            var list = new Array();
            for (var i = 0; i < listPatientTestDetail.length; i++) {
                var PatientTestDetail = {};
                PatientTestDetail.Id = listPatientTestDetail[i].Id;
                PatientTestDetail.Result = $("#Result" + listPatientTestDetail[i].Id).val();
                PatientTestDetail.Remarks = $("#Remarks" + listPatientTestDetail[i].Id).val();
                list.push(PatientTestDetail);
            }
            _PreparedFormObj.listPatientTestResultUpdateViewModel = list;
        }

        $.ajax({
            type: "POST",
            url: "/PatientTest/AddEdit",
            data: _PreparedFormObj,
            dataType: "json",
            success: function (result) {
                var message = result;
                Swal.fire({
                    title: message,
                    icon: "success"
                }).then(function () {
                    location.href = "/PatientTest/Index/";
                });
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    });

    var PreparedFormObj = function () {
        var _PatientTestCRUDViewModel = {
            Id: $("#Id").val(),
            CreatedDate: $("#CreatedDate").val(),
            CreatedBy: $("#CreatedBy").val(),

            PatientId: $("#PatientId").val(),
            ConsultantId: $("#ConsultantId").val(),
            TestDate: $("#TestDate").val(),
            DeliveryDate: $("#DeliveryDate").val(),
            PaymentStatus: $("#PaymentStatus").val(),
        };

        var SendObject = {
            PatientTestCRUDViewModel: _PatientTestCRUDViewModel,
            listPatientTestDetailCRUDViewModel: listPatientTestDetail,
            listPatientTestResultUpdateViewModel: null
        }
        return SendObject;
    }
</script>